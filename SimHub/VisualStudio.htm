<html><head>
<link rel='stylesheet' type='text/css' href='../my.css'>

<title>How-To for Visual Studio for SimHub plugin</title>
</head>

<body>
<div align=center>
<table class="my_table"><tr><td style="padding-left:50">

<a href="HowTo.htm#HowTo"><i>back</i></a><br>
<h3>Visual Studio for SimHub plugin:&nbsp How-To</h3>
SimHub and its plugin SDK are in C#;&nbsp  <a href="https://www.w3schools.com/cs/">W3 C# Tutorial</a> describes C# elements well;<br>
content until C# Methods is classic C.<br>
<a href="https://www.tutorialspoint.com/csharp/">tutorialspoint Basic Syntax</a> page lists C# Keywords;<br>
Program Structures page introduces Visual Studio<br>
sadly employing concepts out of order or simply unexplained.<br>
<br>
<br>
Visual Studio 2019 does not update to 2022;&nbsp  VS 2022 installs in parallel.<br>
(<a href="https://visualstudio.microsoft.com/vs/community/"><i>VS Community 2022 Installation</i></a>)<br>
<br>
Clicking on a .csproj file launched Visual Studio<br>
<li> should really click on .sln file;&nbsp a solution may contain multiple projects...<br>
 &nbsp &nbsp .csproj file was listed in lower right Properties window<br>
<li> clicked on wrench icon, launching an Application window,<br>
 &nbsp &nbsp which showed .NET framework 4.7.2<br>
 &nbsp &nbsp <b>-</b> SimHub wants at least 4.8, per Wotever 8.2.0 release 12/16/2022<br>
 &nbsp &nbsp &nbsp Change framework setting in Visual Studio<br><br>

<a name=SDK><h4></a><a href="https://learn.microsoft.com/en-us/windows/apps/windows-app-sdk/migrate-to-windows-app-sdk/upgrade-assistant">Migrate from UWP to Windows App SDK</a></h4></a>
This enables removing unused resources.<br>
<details><summary> for VS 2019</summary>
<h3><a href="https://www.partech.nl/en/publications/2020/11/converting-c-sharp-projects-to-the-new-sdk-format#">Converting old csproj to SDK</a></h3>
SDK projects are wanted for unused reference removal support.<br>
<code>&gt;dotnet tool install --global Project2015To2017.Migrate2019.Tool</code><br>
You can invoke the tool using the following command:&nbsp <code>dotnet-migrate-2019</code><br>
Tool 'project2015to2017.migrate2019.tool' (version '4.1.3') was successfully installed.<br>
<br>
<code>&gt;dotnet migrate-2019 wizard E:\my\Sim\SimHub\SimHub\PluginSdk\blekenbleu.MIDIio\blekenbleu.MIDIio.csproj</code><br>
(<a href="sdk.txt.htm">transcript</a>)<br>
<br>
Since the <code>dotnet migrate-2019 wizard</code> was run on the <code>.csproj</code> file but not the <code>.sln</code>,<br>
Visual Studio was launched by clicking the  <code>.csproj</code> file, and unused references were removed, but <code>.sln</code> <i>was not updated</i>.<br>
As a test, that <code>.sln</code> was disappeared by moving to another directory, and Visual Studio seemed fine with no <code>.sln</code> file.<br>
However, moving the <code>.sln</code> file back while it was running excited Visual Studio enough to update it.<br>
<br>
Because SDK version defaults to <code>OutDir ..\..\net48\</code>,<br>
added to <code>.csproj</code> file:&nbsp <code>&lt;OutDir&gt;..\..\&lt;/OutDir&gt;</code>
</details><br><br>

<details><summary>A <i>simple</i> SimHub plugin</summary>
<pre>
https://github.com/search?q=simhub+plugin
https://github.com/viper4gh/SimHub-Plugin-CalcLngWheelSlip
Has (for VS):
Properties/, *.cs project.class.sln,csproj, SettingsControl.xaml, xaml.cs
(for git):&nbsp .gitattributes, .gitignore
Also:&nbsp README.md, docs/
Cloned by GitHub Desktop to SimHub/PluginSdk/
launched with VS 2019,
with Viper.PluginCalcLngWheelSlip highlighted under Solution Explorer,
click wrench icon under Properties to launch main properties.
Under Debug, added * Start external program:&nbsp [\path\to\SimHubWPF.exe  ]
.. a relative path (..\..\SimHubWPF.exe) was rejected.
That provokes creation of Viper.PluginCalcLngWheelSlip.csproj.user
.. which was ignored by .gitignore entry '*.user'
$ git add -f Viper.PluginCalcLngWheelSlip.csproj.user</pre>

Build failed, in part complaining about .NET Target framework not 4.8<br>
- downloaded and installed, then under Properties wrench Application,<br>
changed Target framework to .NET Framework 4.8<br>
.. which modified Viper.PluginCalcLngWheelSlip.csproj<br>
<br>
Forked in GitHub Desktop, which pushed it to<br>
https://github.com/blekenbleu/SimHub-Plugin-CalcLngWheelSlip<br>
... renamed on GitHub website under settings<br>
https://github.com/blekenbleu/CalcLngWheelSlip<br>
<br>
Project then built with warning:<br><code>
>E:\my\Sim\SimHub\SimHub\PluginSdk\CalcLngWheelSlip\PluginCalcLngWheelSlip.cs(13,6,13,22):<br>
 &nbsp  warning CS0612:&nbsp 'PluginDescritionAttribute' is obsolete</code><br>
<br>
deleted <code>PluginDescritionAttribute</code>, which Wotever had deprecated<br>
<br>
Prompted for 
<a href="https://learn.microsoft.com/en-us/visualstudio/intellicode/custom-models#autotraining-models-for-your-codebase">IntelliCode</a>;&nbsp opted in.<br>

At this point, GitHub Desktop expects push to https://github.com/blekenbleu/SimHub-Plugin-CalcLngWheelSlip<br>
... but automagically accommodated repository name change.<br>
commented out '*.user' in <code>.gitignore</code> to push <code>Viper.PluginCalcLngWheelSlip.csproj.user</code><br>
<br>
The <code>Viper.PluginCalcLngWheelSlip</code> plugin not only built,<br>
it installed and was detected by SimHub and seems to work,<br>
but not in iRacing or ACC...<pre>
SimHub.Logging:&nbsp [2023-01-16 16:34:32,492] INFO - Initialising Viper.PluginCalcLngWheelSlip.ViperDataPlugin plugin
Exception thrown:&nbsp 'System.IO.FileNotFoundException' in mscorlib.dll</pre>

<b>Using <a href="https://medium.com/c-sharp-progarmming/safely-rename-a-project-folder-visual-studio-f3c6bd4d0bd6">this</a>
for renaming DataPluginDemo to MIDI-io</b> turned everything to crap:<br>

Optional Step:&nbsp Rename Namespaces should emphasize that requires loading a .cs file... got this warning:<br>
<div align=center><img src="ManagedResources.png"></div><br clear=all>
VS rejects <b>MIDI-io</b> namespace;<br>
MIDIio is OK...Some brute force Vim, then try renaming per above instructions.<br>
One gotcha:&nbsp rename the whatever before right-clicking for rename<br>
<b><a href="https://github.com/MahApps/MahApps.Metro/issues/4046">Can't find resource mahapps.styles.button.flat<a></b><br>
Fiddling with resources provoked license complaints from (Arduino) Visual Micro, so uninstalled it.<br>
Despite warning, manually changed Properties/AssemblyInfo.cs,<br>
replacing blekenbleu.PluginSdkDemo with blekenbleu.MIDIio<br>
<br>
Hyphen in namespace is rejected;&nbsp  probably also in class names.<br>
Using <code>MIDIio</code> for both namespace and class is evidently <i><b>very bad</b></i>, halting VS with a useless error message.<br>
Folder name is not problematic, e.g. using <code>MIDIio</code> for folder and main class names.<br>
The only place that namespace (unique from class name) is referenced without specific [Nn]amespace label are:<br>
<pre>SettingsControl.xaml:?&lt;UserControl x:Class="""
Properties/Resources.Designer.cs:&nbsp global::System.Resources.ResourceManager
 temp = new global::System.Resources.ResourceManager("", typeof(Resources).Assembly);
</pre></details>

<h4>XAML user interface (ick) tutorials</h4>
<li>Microsoft <a href="https://learn.microsoft.com/en-us/dotnet/desktop/wpf/xaml/">WPF XAML overview</a>
<li><a href="https://learn.microsoft.com/en-us/visualstudio/xaml-tools/creating-a-ui-by-using-xaml-designer-in-visual-studio">Create a UI using XAML Designer</a>
<li><a href="https://www.tutorialspoint.com/xaml/xaml_vs_csharp_code.htm">XAML Vs C# Code</a>

<h4>Get in the habit of checking <code>.csproj</code> file with a text editor</h4>
IMO, changing via Visual Studio UI is harder than editing them in the <code>.csproj</code> file.<br>
I found and fixed several obvious inconsistencies e.g. in paths that way.

<a name=SDK><h3><a href="https://learn.microsoft.com/en-us/visualstudio/ide/how-to-add-or-remove-references-by-using-the-reference-manager?view=vs-2019#assemblies-tab">Adding
<code>Melanchall.DryWetMidi</code> Assemblies dependency</h3></a>
VS volunteered <code>Naudio</code> but accepted <code>Melanchall.DryWetMidi.dll</code>.<br>
<br>
Vertical green bars in left margin:&nbsp recently saved changes (yellow before saving).<br>

<h4>Avoid upsetting VS by copying one object <code>.cs</code> to a <code>.txt</code>.</h4>
<li>Edit the <code>.txt</code> into a new class, <i>then</i> rename to <code>.cs</code>.

</td></tr><tr><td align=center>
maintained by <a href="https://github.com/blekenbleu">blekenbleu</a><br>
</td></tr></table></div>

</body></html>
