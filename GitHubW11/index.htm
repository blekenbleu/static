<!DOCTYPE html>
<html lang="en-US">
  <head>
    <meta charset='utf-8'>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <link rel="stylesheet" href="/assets/css/style.css?v=">
    <link rel="stylesheet" type="text/css" href="/assets/css/print.css" media="print">
    <!--[if lt IE 9]>
    <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->

<!-- Begin Jekyll SEO tag v2.8.0 --> 
<title>GitHub Desktop and Jekyll 2023</title>
<meta name="generator" content="Jekyll v3.9.3" />
<meta property="og:title" content="GitHub Desktop and Jekyll 2023" />
<meta property="og:locale" content="en_US" />
<meta name="description" content="Jekyll on Windows for GitHub Pages preview in 2023" />
<meta property="og:description" content="Jekyll on Windows for GitHub Pages preview in 2023" />
<link rel="canonical" href="https://blekenbleu.github.io//GitHubW11/" />
<meta property="og:url" content="https://blekenbleu.github.io//GitHubW11/" />
<meta property="og:site_name" content="blekenbleu.github.io" />
<meta property="og:type" content="website" />
<script type="application/ld+json">
{"@context":"https://schema.org","@type":"WebPage","description":"Jekyll on Windows for GitHub Pages preview in 2023","headline":"GitHub Desktop and Jekyll 2023","url":"https://blekenbleu.github.io//GitHubW11/"}</script>
<!-- End Jekyll SEO tag -->
   
</head>
<body>
<div id="container">
<div class="inner">

<header>
<h2>GitHub Desktop and Jekyll 2023</h2>
</header>

<section id="main_content">

<font size=-1><a href="../"><i>back</i></a></font>
<a href="https://www.gixen.com/index.php" name="9e092736783d0da1dfd8413d57d10faf" target="_blank" >
<img align=right src="https://www.gixen.com/images/gixenlink.gif" border="0" alt="Auction Sniper" title="Auction Sniper">
</a>
<br>

<h2>Jekyll on Windows 11 for GitHub Pages preview</h2>
Differences in Jekyll experiences on different Windows versions<br>
 are mostly about Ruby and Jekyll evolution and breaking changes.<br>
Ruby installation has become more trouble-free, without hangs and need for retries.<br>
Meanwhile, Jekyll functionality on Windows
<a href="https://www.moncefbelyamani.com/making-github-pages-work-with-latest-jekyll/">seems to have regressed</a>:<br>
<li>&lt;details&gt; seemingly are no longer supported in markdown
<li><code>jekyll new</code> markdown defaults to blog-specific format
<li><code>Gemfile</code> configured for page appearances to match GitHub Pages theme<br>
 &nbsp &nbsp &nbsp causes GitHub Pages deployment action to timeout:<pre>
	$ diff Gemfile ../site
	5c5
	< gem 'github-pages'                            # Windows Jekyll: no theme
	---
	> gem 'github-pages', group: :jekyll_plugins    # GitHub Pages Action times out
</pre>
<li>ignores markdown files lacking front matter starting on the first line
<br><br>

This last issue differs between Jekyll on Windows and GitHub's Jekyll docker.<br>
Fortunately, empty front matter suffices to enable markdown processing;<br>
default title is overridden by a markdown <b>### heading</b> immediately below front matter.
<pre>---
---
### Custom Title</pre>

<p>Over 60 markdown files in my GitHub Pages needing editting for these issues...
<li>Trivial changes typically require over 5 minutes for GitHub to process.
<li>Starting over, I would completely avoid <a href="https://www.markdownguide.org/tools/github-pages/">markdown for GitHub Pages</a>.
<details>
<summary>Instead, <a href="https://en.wikipedia.org/wiki/Web_Components"><b>Web Components</b></a> enable HTML modularity.
</summary>
Template engines help break HTML code into components for reuse across multiple HTML files.<br>
Template engines also support passing variables into those components.<br>
Browseable pages from components requires compiling, e.g. by client-side JavaScript.
<li><a href="https://kinsta.com/blog/web-components/">A Complete Introduction to Web Components in 2023 | Kinsta</a>
<li><a href="https://www.creativebloq.com/features/web-components">Web components: The ultimate guide | CREATIVE BLOQ</a>
<li><a href="https://css-tricks.com/an-introduction-to-web-components/">An Introduction to Web Components | CSS-TRICKS</a>
<li><a href="https://www.webcomponents.org/author/vanillawc">Open Source Web Components implemented in vanilla JavaScript</a>
<li><a href="https://javascript.info/web-components">JavaScript Web Components</a>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Components">Mozilla Web Components</a>
<li><a href="https://learn.microsoft.com/en-us/fluent-ui/web-components/">Fluent Web Components | Microsoft</a> using React
</details>
</p>

<details>
<summary><b>Sep 2023 Windows Jekyll Installation</b> - click for details</summary>
<details>
<summary><b>Ruby</b></summary>
<embed width=800 src=RubyInstall.txt>
</details>
<details>
<summary><b>Bundler</b></summary>
<embed width=600 src=BundlerInstall.txt>
</details>
<details>
<summary><b>Jekyll</b></summary>
<embed width=600 src=Jekyllinstall.txt>
</details>
<details>
<summary><b>bundle install</b></summary>
<embed width=800 src=bundle_install.txt>
</details>
<details>
<summary><b>webrick</b></summary>
<embed width=800 src=webrick.txt>
</details>
</details><br>

<h4>Work-arounds to serve themed pages on Windows</h4><ul compact>
<li>Spun out <a href="https://blekenbleu.github.io/static/">separate GitHub Pages projects</a>:<br>
 <a href="https://github.com/blekenbleu/static"><code>static</code></a> (folders without markdown),
 <a href="https://github.com/blekenbleu/microscope">microscope</a>,
 <a href="https://github.com/blekenbleu/Arduino-Blue-Pill">Arduino-Blue-Pill</a>.

<li>Deleted <code>Gemfile.lock</code>, pushed to GitHub, then added to <code>.gitignore</code>.<br>
    GitHub Pages builds fine without it, the major source of dependabot issues.
<li>Likewise, added <code>_site/</code> to <code>.gitignore</code>.

<li><code>unset JEKYLL_GITHUB_TOKEN</code> before <code>bundle exec jekyll serve</code><br>
    to avoid <a href=#GPI>github-pages issues</a>.
<li>Serve local Jekyll from folder <code>site/</code>, which builds <code>site/_site/</code><br>
   from <code>../blekenbleu.github.io/</code>, using custom <code>_config.yml</code>:
   <pre>theme: jekyll-theme-tactile
repository: blekenbleu/blekenbleu.github.io
source: ../blekenbleu.github.io/</pre>
<li><code>blekenbleu.github.io/</code> (markdown) changes are regenerated and served from <code>site/</code>,<br>
while changes to content linked in <code>site/_site/</code> will be transparent to its Jekyll regeneration, but served.

<li>In <code>site/_site/</code>, link:<br>
 microscope <code>_site/</code> build folder, <code>static/</code> and <code>Arduino-Blue-Pill/docs/</code> folders.<br>
 <code>bundle exec jekyll serve --incremental</code> running in <code>site/</code><br>
 detects changes in neither <code>microscope</code> nor <code>Arduino-Blue-Pill</code>;<br>
 each requires <code>bundle exec jekyll build</code> to update their <code>_site/</code> folder.<br><br>

 Linking needs repeating whenever  <code>site/_site/</code> gets regenerated;<br> <code>links.bat</code> does that:
<pre>cd _site
mklink /d Arduino-Blue-Pill ..\..\..\Arduino\Blue-Pill\docs
mklink /d microscope ..\..\microscope\_site
mklink /d static ..\..\static</pre>
</ul>

<a name=GPI><h3>github-pages issues</h3></a>
To apply themes, Windows Jekyl requires in <code>Gemfile</code>:<br>
<code>gem 'github-pages', group: :jekyll_plugins</code><br>
Beyond that, with <code>JEKYLL_GITHUB_TOKEN</code> set, <code>bundle exec jekyll serve</code> fails with:
<pre>Liquid Exception: The GitHub API credentials you provided aren't valid. in /_layouts/default.html

$ bundle exec github-pages health-check
 (LoadError)4/lib/ruby/gems/3.2.0/gems/ffi-1.15.5/lib/ffi/library.rb:145:in `block in ffi_lib': Could not open library 'libcurl': The specified module could not be found.
.
Could not open library 'libcurl.dll': The specified module could not be found.
.
Could not open library 'libcurl.so.4': The specified module could not be found.
.
Could not open library 'libcurl.so.4.dll': The specified module could not be found.
</pre>
<h4>Installed <code>curl</code>, which did not help:</h4>
<pre>$ pacman -Sy mingw-w64-x86_64-curl
$ find /f -name curl.h -print
/f/Ruby32-x64/msys64/mingw64/include/curl/curl.h
$ gem install curb --platform=ruby -- --with-curl-lib="F:/Ruby32-x64/msys64/mingw64/lib" --with-curl-include="F:/Ruby32-x64/msys64/mingw64/include"
Temporarily enhancing PATH for MSYS/MINGW...
Building native extensions with: '--with-curl-lib=F:/Ruby32-x64/msys64/mingw64/lib --with-curl-include=F:/Ruby32-x64/msys64/mingw64/include'
This could take a while...
Successfully installed curb-1.0.5
Parsing documentation for curb-1.0.5
Installing ri documentation for curb-1.0.5
Done installing documentation for curb after 0 seconds
1 gem installed </pre>
... <code>bundle exec github-pages health-check</code> <i>still</i> fails the same way.<br>

<h3>Ruby updates</h3>
While Ruby gems can be updated, Ruby itself as installed by <a href="https://rubyinstaller.org/downloads/">RubyInstaller</a> cannot.<br>
Ruby is used here <i>only</i> for Jekyll, but its bundled <a href="https://www.msys2.org/">MSYS2</a> gets used extensively,<br>
with several packages added.&nbsp Before replacing Ruby,<br>
 run MSYS2 package manager to document its current package list:<br>
<li><code>pacman -Q > /d/oldMSYS2.txt</code><br>
.. then compare with new MSYS2 for determining packages to add.<br>
Of course, any MSYS2 <code>home/user</code> folder customizations should also be ported.<br>
</section><br>

<hr>
<p align=center>static is maintained by <a href="https://github.com/blekenbleu">blekenbleu</a></p>
</div>
</div> 
</body></html>
